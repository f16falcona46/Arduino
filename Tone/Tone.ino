#define F_CPU 8000000UL
#include <util/delay.h>
#include <avr/sleep.h>
#include <avr/io.h>
#include <avr/pgmspace.h>

//const unsigned char sine_table[] PROGMEM = {128,131,134,137,140,143,146,149,152,156,159,162,165,168,171,174,176,179,182,185,188,191,193,196,199,201,204,206,209,211,213,216,218,220,222,224,226,228,230,232,234,236,237,239,240,242,243,245,246,247,248,249,250,251,252,252,253,254,254,255,255,255,255,255,256,255,255,255,255,255,254,254,253,252,252,251,250,249,248,247,246,245,243,242,240,239,237,236,234,232,230,228,226,224,222,220,218,216,213,211,209,206,204,201,199,196,193,191,188,185,182,179,176,174,171,168,165,162,159,156,152,149,146,143,140,137,134,131,128,124,121,118,115,112,109,106,103,99,96,93,90,87,84,81,79,76,73,70,67,64,62,59,56,54,51,49,46,44,42,39,37,35,33,31,29,27,25,23,21,19,18,16,15,13,12,10,9,8,7,6,5,4,3,3,2,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,3,4,5,6,7,8,9,10,12,13,15,16,18,19,21,23,25,27,29,31,33,35,37,39,42,44,46,49,51,54,56,59,62,64,67,70,73,76,79,81,84,87,90,93,96,99,103,106,109,112,115,118,121,124};
//const unsigned char short_wave[] PROGMEM = //{128,147,167,185,202,217,231,241,249,254,255,254,250,242,232,220,205,188,170,150,130,111,91,72,55,40,26,15,7,2,0,0,4,11,21,33,48,65,83,102,122,141,161,180,197,213,227,238,247,253,255,255,251,245,236,224,209,193,175,156,136,117,97,78};
const unsigned char short_wave2[] PROGMEM = {0,32,64,96,128,160,192,224};

void delayms(int ms) {
	for (int i = 0; i < ms; ++i) {
		_delay_ms(0.1);
	}
}

int main() {
	(ADCSRA &= ~(1<<ADEN)); //disable adc
	PLLCSR |= (1<<PLLE); //enable PLL
	PLLCSR |= (1<<PCKE);
	TCCR1 = 0<<PWM1A | 0<<COM1A0 | 1<<CS10;
	GTCCR = 1<<PWM1B | 1<<COM1B1;
	DDRB |= (1<<PB4);
	/*
	for (int i = 10; i > 0; --i) {
		int max = 1000/i;
		for (int j = 0; j<max; ++j) {
			PORTB ^= (1<<PB4);
			delayms(i);
		}
	}
	*/
	while (1) {
		for (int i = 0; i < 65535; ++i) {
			OCR1B=(i<<4)%256;//short_wave2[i%8];
			_delay_us(125);
		}
	}
	sleep_enable();
	sleep_cpu();
}